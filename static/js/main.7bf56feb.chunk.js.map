{"version":3,"sources":["PlateNumber.js","Longitude.js","Lattitude.js","VehicleCard.js","App.js","reportWebVitals.js","index.js"],"names":["PlateNum","length","randomChars","result","i","charAt","Math","floor","random","slice","longitude","toFixed","lattitude","VehicleCard","userData","className","name","first","last","Longitude","Lattitude","App","useState","allUsers","setAllUsers","users","setUsers","photos","setPhotos","useEffect","a","fetch","response","json","console","log","results","then","res","onInput","event","value","target","toLowerCase","filteredUsers","filter","user","includes","placeholder","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAeeA,G,YAfE,SAAC,GAKf,IAL8B,IAAdC,EAAa,EAAbA,OAEZC,EAAc,6BACdC,EAAS,GAEHC,EAAI,EAAGA,EAAIH,EAAQG,IACzBD,GAAUD,EAAYG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWN,EAAYD,SAMxE,OAHAE,EAASA,EAAOM,MAAM,GAAI,IAAMH,KAAKC,MAAM,IAAAD,KAAKE,UAA8B,O,OCFhEE,G,KALC,SAAC,GAEjB,OADA,eACuE,GAA/D,QAAAJ,KAAKE,SAAmC,UAAUG,QAAQ,KCGpDC,EALE,SAAC,GAElB,OADA,eACuE,GAA/D,kBAAAN,KAAKE,SAAmC,UAAUG,QAAQ,I,OCwBpDE,EArBK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAGnB,OACI,sBAAKC,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,UAA8BD,EAASE,KAAKC,MAA5C,IAAoDH,EAASE,KAAKE,QAClE,sBAAKH,UAAU,aAAf,UAEI,yCAAW,cAAC,EAAD,CAAUd,OAAQ,IAA7B,OACA,0CAAcK,KAAKC,MAAM,IAA4B,IAAhBD,KAAKE,UAA1C,OACA,yCAAaF,KAAKC,MAAuB,IAAjBD,KAAKE,UAAoB,GAAjD,YACA,6CAAe,cAACW,EAAD,OACf,6CAAe,cAACC,EAAD,cCiChBC,MAhDf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KAgCA,OA9BAC,qBAAU,WACR,sBAAC,8BAAAC,EAAA,+EAG0BC,MAAM,2CAHhC,cAGSC,EAHT,gBAIoBA,EAASC,OAJ7B,OAIGnB,EAJH,uDAMGoB,QAAQC,IAAR,MACArB,EAAW,GAPd,QASCU,EAAYV,EAASsB,SACrBV,EAASZ,EAASsB,SAVnB,wDAAD,KAYC,IAEHP,qBAAU,WACcE,MAAM,4GACvBM,MAAK,SAAAC,GAAG,OAAEA,EAAIL,UACdI,MAAK,SAAAC,GAAG,OAAEJ,QAAQC,IAAIG,MAEvBV,EAAUD,KAEd,IASA,sBAAKZ,UAAU,MAAf,UACE,0CACA,uBAAOA,UAAU,aAAawB,QARd,SAAAC,GAClB,IAAMC,EAAQD,EAAME,OAAOD,MAAME,cAC3BC,EAAgBrB,EAASsB,QAAO,SAAAC,GAAI,MAAK,UAAGA,EAAK9B,KAAKC,MAAb,YAAsB6B,EAAK9B,KAAKE,MAAOyB,cAAcI,SAASN,MAC7Gf,EAASkB,IAK6CI,YAAY,cAChE,qBAAKjC,UAAU,kBAAf,SAECU,EAAMwB,KAAI,SAACH,EAAMI,GAAP,OACT,cAAC,EAAD,CAAavB,OAAQA,EAAOuB,GAAoBpC,SAAUgC,GAAjBI,YClClCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.7bf56feb.chunk.js","sourcesContent":["const PlateNum = ({length}) =>  {\r\n\r\n   var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n   var result = '';\r\n\r\n   for ( var i = 0; i < length; i++ ) {\r\n       result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\r\n   }\r\n   \r\n   result = result.slice(0, -3) + (Math.floor(Math.random() * (999 - 100 + 1)) + 100);\r\n\r\n \r\n   return result;\r\n}\r\n\r\nexport default PlateNum\r\n\r\n","import './Location.css';\r\n\r\nconst longitude = ({}) =>\r\n {\r\n  return (Math.random() * (23.89251 - 14.24712) + 14.24712).toFixed(3) * 1;\r\n }\r\n\r\n  export default longitude ; ","import './Location.css';\r\n\r\nconst lattitude = ({}) =>\r\n{\r\n return (Math.random() * (54.79086 - 49.29899) + 49.29899).toFixed(3) * 1;\r\n}\r\n\r\n export default lattitude; ","import './VehicleCard.css';\r\nimport PlateNum from './PlateNumber';\r\nimport Longitude from './Longitude';\r\nimport Lattitude from './Lattitude';\r\n\r\n\r\n\r\nconst VehicleCard = ({ userData }) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__title\">{userData.name.first} {userData.name.last}</div>\r\n            <div className=\"card__body\">\r\n   \r\n                <p> Plate: <PlateNum length={6} /> </p>\r\n                <p> Number: { Math.floor(100000000 + Math.random() * 900000000) } </p>\r\n                <p> Speed: { Math.floor(Math.random() * (140)) + 60} km/h </p>\r\n                <p> Longitude: <Longitude  /></p>\r\n                <p> Lattitude: <Lattitude  /></p>\r\n               \r\n\r\n           </div>\r\n        </div>\r\n        \r\n    )\r\n};\r\n\r\nexport default VehicleCard;","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport VehicleCard from './VehicleCard';\n\nfunction App() {\n  const [allUsers, setAllUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [photos, setPhotos] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      let userData;\n      try {\n        const response = await fetch(\"https://randomuser.me/api/?results=5000\");\n        userData = await response.json();\n      } catch (error) {\n        console.log(error);\n        userData = [];\n      }\n      setAllUsers(userData.results);\n      setUsers(userData.results);\n    })();\n  }, []);\n\n  useEffect(() => {\n        const response =  fetch(\"https://api.unsplash.com/search/photos/?client_id=AMjRW_wUY9AUQb1tLUzzP6ifBxsF9IEVGNUe4_f9LN4&query=cars\")\n        .then(res=>res.json())\n        .then(res=>console.log(res))\n        // to do: ustawić w stanie zdjec array 10ciu elementów , \n        setPhotos(photos);\n \n  },[])\n     \n\n  const filterCards = event => {\n    const value = event.target.value.toLowerCase();\n    const filteredUsers = allUsers.filter(user => (`${user.name.first} ${user.name.last}`.toLowerCase().includes(value)));\n    setUsers(filteredUsers);\n  }\n  return (\n    <div className=\"App\">\n      <h1>My Fleet</h1>\n      <input className=\"search-box\" onInput={filterCards} placeholder=\"Search...\"/>\n      <div className=\"cards-container\"> \n\n      {users.map((user, index ) => (\n        <VehicleCard photos={photos[index]} key={index} userData={user} />\n        ))}\n      </div>\n    </div>\n  );\n      }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}